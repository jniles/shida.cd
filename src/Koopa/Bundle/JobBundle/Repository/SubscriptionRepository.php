<?php

namespace Koopa\Bundle\JobBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Koopa\Bundle\UserBundle\Entity\User;

/**
 * SubscriptionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubscriptionRepository extends EntityRepository
{
    /**
     * @param integer $userId
     * @return bool
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function isSubscribed($userId, $jobId)
    {
        $qb = $this->createQueryBuilder('s')
            ->where('s.user = :user')
            ->setParameter('user', $userId)
            ->andWhere('s.job = :job')
            ->setParameter('job', $jobId);

        return (bool) $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Count user subscription
     *
     * @param User $user
     * @param boolean $accepted
     *
     * @return integer
     */
    public function count(User $user, $accepted = false)
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('count(s.id)')
            ->from($this->_entityName, 's')
            ->where('s.user = :user')
            ->setParameter('user', $user->getId());

        if (true === $accepted) {
            $qb->andWhere('s.accept = :accepted')->setParameter('accepted', true);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }
}
